#include <iostream>
using namespace std;
void main()
{
	int num = 20;
	num = num + 10; // 기본형
	num += 10; // 축약형
	// 같은 의미 

	//operator : 연산자

	/*
	/,%  : 0으로 나누거나 나머지를 구할 수 없다.
	*/

	/*
	+,-,*,/,%
	*/
	/*int temp = 0;
	int num2 = 10 / temp;*/

	/*
	관계연산자 : 양 변의 관계를 통해 명제를 뱉는다.
	<,>,>=,<=,==(동일하다.),!=(동일하지 않다.)
	*/
	cout << (10 < 11) << endl;

	/*
	논리 연산자 : 양 변의 명제에 따라 명제 값을 내뱉는다.
	AND(&&) / OR(||)

	AND(&&) : 둘다 참일 때 참 / 하나라도 거짓이면 거짓, 나머지는 거짓
	A    B   RESULT   
	1    1     1
	1    0     0
	0    1     0
	0    0     0

	OR(||) : 둘 중에 하나라도 참이면 참/둘다 거짓이면 거짓
	A    B   RESULT
	1    1     1     
	1    0     1     
	0    1     1     
	0    0     0     
	
	AND : 그리고
	OR  : 또는

	*/

	/*
	비트 논리 연산 : 비트 단위에서 논리 연산을 하여 명제를 반환한다.
	AND(&), OR(|), XOR(^)

	AND
	A    B   RESULT
	1    1     1
	1    0     0
	0    1     0
	0    0     0

	OR
	A    B   RESULT
	1    1     1     
	1    0     1     
	0    1     1     
	0    0     0   

	XOR - 서로 다르면 참 / 같으면 거짓
	A    B   RESULT
	1    1     0
	1    0     1     
	0    1     1
	0    0     0
	*/

	/*
	쉬프트 연산자
	<< , >>
	
	0110  << 1 -> 1100
	0110 >> 2 ->  0001
	
	int num = 3;
	3 << 5;

	0011 -> 0000

	00000000/00000000/00000000/01100000 : 3
	*/


	//short | int
	
	// 64 32 16  8  4 2  1
	// 1   1  1  0 1  1  0
	cout << "내가 생각한 답 : ()" << (10 > 5 && 3 < 2) << endl;
	cout << "내가 생각한 답 : ()" << (10 > 5 || 3 <= 2) << endl;
	cout << "내가 생각한 답 : ((2진수)/(10진수))" << (100 & 57) << endl;
	cout << "내가 생각한 답 : ((2진수)/(10진수))" << (100 | 54) << endl;
	cout << "내가 생각한 답 : ((2진수)/(10진수))" << (40 ^ 17) << endl;
	cout << "내가 생각한 답 : ((2진수)/(10진수))" << (38 << 3 ) << endl;
	cout << "내가 생각한 답 : ((2진수)/(10진수))" << (24 >> 5) << endl;

	// 숙제
	// 1. 복습!!!!!
}